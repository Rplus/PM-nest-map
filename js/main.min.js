'use strict';

function getPosition() {
  var urlParams = new URLSearchParams(location.search);
  var lat = urlParams.get('lat') || localStorage.getItem('lat') || 25.052920;
  var lng = urlParams.get('lng') || localStorage.getItem('lng') || 121.556237;
  var zoom = urlParams.get('zoom') || localStorage.getItem('zoom') || 15;
  return {
    latLng: [+lat, +lng],
    zoom: +zoom
  };
}

var urls = {
  GAS: 'https://script.google.com/macros/s/AKfycbwv0HHiEgWwxtdasGMxrBRf5zD3CP8Yip-2PPegoVhmdRMAu-9_/dev?id=1N9aa3LZMaFwNbjUSGVD9NloBNE7sM0DY318-DtZHzVo'
};

function toJSON(d) {
  return d.json();
}
function fetchJSON(url) {
  return fetch(url).then(toJSON);
}
function isNumeric(n) {
  return !isNaN(parseFloat(n)) && isFinite(n);
}
function UID() {
  var uid = localStorage.getItem('uid');

  if (!uid || uid.indexOf('-') === -1) {
    uid = navigator.userAgent.replace(/\D/g, '').match(/(\d{6,11})/g).map(function (d) {
      return (+d).toString(36);
    }).join('-') + Math.random().toString(36);
    localStorage.setItem('uid', uid);
  }

  return uid;
}
function getPlanText(str) {
  var text = document.createTextNode(str);
  var p = document.createElement('p');
  p.appendChild(text);
  return p.innerHTML;
} // export function myFetch(url, type = 'json') {
//   return fetch(url).then(res => {
//     switch (type) {
//       case 'text':
//         return res.text();
//       case 'json':
//       default:
//         return res.json();
//     }
//   })
// }

function navigation(targetLngLat, nowLngLat) {
  if (navigator.userAgent.match(/android/i)) {
    return "google.navigation:q=".concat(targetLngLat, "&mode=w");
  } else if (nowLngLat == 'undefined,undefined') {
    return "http://maps.google.com?q=".concat(targetLngLat);
  } else {
    if (navigator.userAgent.match(/(iphone|ipod|ipad);?/i)) {
      return "comgooglemaps://?saddr=&daddr=".concat(targetLngLat, "&directionsmode=Driving&zoom=15");
    } else {
      return "https://www.google.com.tw/maps/dir/".concat(targetLngLat, "/").concat(nowLngLat, "/@24,120.5,10z/data=!3m1!4b1!4m2!4m1!3e0");
    }
  }
  return '';
}

function createMarkerContent(report) {
  var googleNavigation = navigation("".concat(report.lat, ",").concat(report.lng), "".concat(window.info.nowlatlng.lat, ",").concat(window.info.nowlatlng.lng));
  var updateDate = (report.timestamp || '').split('T')[0];
  return "\n    <div class=\"popup-content\">\n      #".concat(report.dex, " ").concat(report.name, ": ").concat(report.scale, "+/hr\n      <div class=\"note\">\n        ").concat(getPlanText(report.note || ''), "\n        <time class=\"updatetime\" datetime=\"").concat(report.timestamp, "\">").concat(updateDate, "</time>\n      </div>\n      <hr>\n      <div class=\"popup-content--footer\">\n        <a class=\"fix-reoprt\" href=\"###\"\n          data-lat=\"").concat(report.lat, "\"\n          data-lng=\"").concat(report.lng, "\"\n          data-scale=\"").concat(report.scale, "\"\n          data-name=\"").concat(report.name, "\"\n          data-note=\"").concat(report.note || '', "\"\n          data-dex=\"").concat(report.dex, "\"\n        >\n          \u4FEE\u6B63\u62F3\uD83D\uDC4A\n        </a>\n        <a href=\"").concat(googleNavigation, "\" target=\"_blank\">Go\u2197\uFE0F</a>\n      </div>\n    </div>\n  ");
}

var microseconds_for_week = 60 * 60 * 24 * 7 * 1000;
function setMark(report) {
  var iconSize = map.getZoom() < 14 ? 32 : 48;
  var isOld = (new Date() - new Date(report.timestamp)) / microseconds_for_week > 2;
  var marker = Leaflet.marker([report.lat, report.lng], {
    icon: L.divIcon({
      className: "poke-icon poke-icon-".concat(report.dex, " ").concat(isOld ? 'is-old' : 'is-new'),
      html: "\n          <img\n            class=\"pm-img\"\n            src=\"./img/z/".concat(report.dex, ".png\"\n            title=\"#").concat(report.dex, " ").concat(report.name, ", ").concat(report.scale, "+/hr\"\n          >"),
      iconSize: [iconSize, iconSize],
      iconAnchor: [iconSize / 2, iconSize / 2],
      popupAnchor: [0, -iconSize / 3]
    }),
    title: "".concat(report.scale),
    report: report
  }).bindPopup(createMarkerContent(report), {
    autoPan: false
  });
  window.markers.set("".concat(report.lat, ",").concat(report.lng), marker);
}

function postData(_dialog) {
  if (!isNumeric(_dialog.elm.dex.value)) {
    return Promise.reject(new Error('fail'));
  }

  var data = new URLSearchParams({
    'dex': _dialog.elm.dex.value,
    'lat': _dialog.elm.lat.value,
    'lng': _dialog.elm.lng.value,
    'scale': _dialog.elm.scale.value,
    'note': _dialog.elm.note.value,
    'type': _dialog.elm.type.value,
    'uid': window.info.uid,
    'timestamp': +new Date(),
    'id': window.info.SpreadsheetId
  });
  return fetch(_dialog.elm.form.action, {
    method: 'POST',
    body: data.toString(),
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    }
  }).then(toJSON);
}

var _dialog = document.createElement('div');

_dialog.id = 'dialog';
_dialog.hidden = true;
window._dialog = _dialog;
_dialog.innerHTML = "\n  <form id=\"report-form\" class=\"report-form\" action=\"".concat(urls.GAS, "\">\n    <dl class=\"report-content\">\n      <dt>\u5BF6\u53EF\u5922\u7DE8\u865F\uFF1A</dt>\n      <dd id=\"rp-data--dex-box\">\n        <input required id=\"rp-data--dex\" type=\"text\" list=\"rp-data--pm-list\" pattern=\"[0-9.]+\">\n        <datalist id=\"rp-data--pm-list\"></datalist>\n      </dd>\n\n      <dt>\u5DE2\u7A74\u898F\u6A21(\u6BCF\u5C0F\u6642\u6578\u91CF)\uFF1A</dt>\n      <dd id=\"rp-data--scale-box\">\n        <select required id=\"rp-data--scale\">\n          <option value=\"1\" label=\"1~5\"></option>\n          <option value=\"5\" label=\"5+\"></option>\n          <option value=\"15\" label=\"15+\"></option>\n        </select>\n      </dd>\n\n      <dt>\u5DE2\u7A74/\u91CD\u751F\u9EDE\u8A3B\u89E3\uFF1A</dt>\n      <dd id=\"rp-data--note-box\">\n        <input id=\"rp-data--note\" type=\"text\">\n      </dd>\n\n      <dd>\n        <input required type=\"hidden\" readonly id=\"rp-data--type\" value=\"\">\n        <input required type=\"hidden\" id=\"rp-data--lat\" value=\"\">\n        <input required type=\"hidden\" id=\"rp-data--lng\" value=\"\">\n      </dd>\n    </dl>\n    <div class=\"submit-box\">\n      <input id=\"submit\" disabled type=\"submit\" />\n    </div>\n    <div class=\"close-dialog\">\u274C</div>\n  </form>\n  ");
_dialog.elm = {
  lat: _dialog.querySelector('#rp-data--lat'),
  lng: _dialog.querySelector('#rp-data--lng'),
  dex: _dialog.querySelector('#rp-data--dex'),
  pmList: _dialog.querySelector('#rp-data--pm-list'),
  scale: _dialog.querySelector('#rp-data--scale'),
  type: _dialog.querySelector('#rp-data--type'),
  note: _dialog.querySelector('#rp-data--note'),
  submit: _dialog.querySelector('#submit'),
  closeBtn: _dialog.querySelector('.close-dialog'),
  form: _dialog.querySelector('form')
};

_dialog.close = function () {
  _dialog.hidden = true;
};

_dialog.show = function () {
  _dialog.hidden = false;
};

_dialog.elm.closeBtn.addEventListener('click', _dialog.close.bind(_dialog));

function validateForm() {
  var arg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (!_dialog.elm.form.checkValidity()) {
    alert('請確認表單格式:\n* 編號: 數字格式\n\n目前已輸入的寶可夢編號:\n' + _dialog.elm.dex.value);
  }

  _dialog.elm.submit.disabled = arg.forceDisabled || !_dialog.elm.form.checkValidity();
}

function submitFn(e) {
  e.preventDefault();
  validateForm({
    forceDisabled: true
  });
  postData(_dialog).then(function (d) {
    validateForm();

    _dialog.close();

    getData();
  })["catch"](function (err) {
    alert('請確認「寶可夢編號」為數字！');
    console.log('catch', err);
  });
}

_dialog.elm.form.addEventListener('submit', submitFn);

_dialog.elm.form.addEventListener('change', validateForm);

_dialog.initReport = function (param) {
  if (_dialog.open) {
    return;
  }

  console.log(param);
  _dialog.elm.lat.value = param.lat;
  _dialog.elm.lng.value = param.lng;
  _dialog.elm.dex.value = param.dex || '';
  _dialog.elm.scale.value = param.scale || '';
  _dialog.elm.note.value = param.note || '';
  _dialog.elm.type.value = param["new"] ? 'new' : 'update';
  _dialog.elm.form.dataset.type = param["new"] ? 'new' : 'update';
  validateForm();

  _dialog.show();

  _dialog.elm.dex.select();
};

var returnOption = function returnOption(value, label) {
  return "<option value=\"".concat(value, "\" label=\"").concat(label, "\"></option>");
};

function createNamesOption(names) {
  _dialog.elm.pmList.innerHTML = names.map(function (name, idx) {
    return returnOption(idx + 1, name);
  }).join('') + returnOption(0.5, '？');
}

function getData() {
  console.log('re-fetching~~~');
  Promise.all([fetchJSON(urls.GAS), fetchJSON("".concat(urls.GAS, "&method=get_pm_name"))]).then(function (d) {
    var data = d[0].data;
    var pmNames = d[1];
    createNamesOption(pmNames);
    window.info.pmNames = pmNames;
    data.forEach(function (d) {
      d.name = pmNames[d.dex - 1] || '?';
    });

    if (window.markers) {
      earseMarkers(window.markers);
    }

    window.markers = new Map();
    data.forEach(setMark);
    renderMarkersInView();
  });
}

/* global L */
window.Leaflet = window.L;
var map = Leaflet.map('map');
window._map = map;
var position = getPosition();
map.on('moveend', setPosition).on('moveend', renderMarkersInView).on('load', onLoad).on('locationfound', onLocationFound).on('locationerror', onLocationError).setView(position.latLng, position.zoom);
Leaflet.tileLayer('https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
  maxZoom: 20,
  subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
}).addTo(map);

function setPosition() {
  if (!map) {
    return;
  }

  var geo = map.getCenter();
  var _ref = [geo.lat, geo.lng],
      lat = _ref[0],
      lng = _ref[1];
  localStorage.setItem('lat', lat);
  localStorage.setItem('lng', lng);
  localStorage.setItem('zoom', map.getZoom());
}
var markersInView = [];
function renderMarkersInView() {
  var bounds = map.getBounds();

  var checkInView = function checkInView(_marker, _latLng) {
    var inView = bounds.contains(L.latLng.apply(null, _latLng.split(',')));

    if (inView) {
      markersInView.push(_marker);

      _marker.addTo(map);

      if (_marker.isDoubtful) {
        _marker._icon && _marker._icon.classList.add('is-doubtful');
      }
    }

    return inView;
  };

  if (window.markers) {
    earseMarkers(markersInView); // clear markers in view at first

    markersInView = [];
    window.markers.forEach(checkInView);
  }
}

function onLoad() {
  getData();
  setPosition();
}

function onLocationFound(e) {
  window.info.nowlatlng = e.latlng;
  var radius = e.accuracy / 2;

  if (map.circle) {
    map.removeLayer(map.circle);
  }

  map.circle = Leaflet.circle(e.latlng, radius).addTo(map);
}

function onLocationError(e) {
  console.warn(e.message);
  document.title = "[GG] - ".concat(document.title);
}
function earseMarkers(markers) {
  markers.forEach(function (m) {
    return map.removeLayer(m);
  });
}

function createLocateBtn() {
  var dom = document.createElement('button');
  dom.id = 'locate-me';
  dom.innerText = '⦿';
  dom.addEventListener('click', locateMe);
  return dom;
}

function locateMe() {
  map.locate({
    setView: true,
    maxZoom: Math.max(map.getZoom(), 16)
  });
}

var locateMeBtn = createLocateBtn();

function createReFetchBtn() {
  var dom = document.createElement('button');
  dom.id = 're-fetch';
  dom.innerText = '↻';
  dom.addEventListener('click', getData);
  return dom;
}

var reFetchBtn = createReFetchBtn();

var aside = document.createElement('aside');
aside.id = 'info';
aside.className = 'info';
aside.innerHTML = "\n  <a class=\"reset-info\" href=\"#\"></a>\n  <article class=\"info-article\">\n    <a href=\"#\" class=\"close-info\">\u274C</a>\n    <h1>\u3010 \u5BF6\u53EF\u5922\u5DE2\u7A74\u5730\u5716 \u3011</h1>\n    <ul>\n      <li>\n        \u64CD\u4F5C\u4ECB\u7D39\u8207\u6559\u5B78\uFF1A\n        <br>\n        <a href=\"https://github.com/Rplus/PM-nest-map/blob/master/USAGE.md\">\n          https://github.com/Rplus/PM-nest-map/blob/master/USAGE.md\n        </a>\n      </li>\n\n      <li>\n        \u5C08\u6848\u539F\u59CB\u78BC\uFF1A\n        <br>\n        <a href=\"https://github.com/Rplus/PM-nest-map\">\n          https://github.com/Rplus/PM-nest-map\n        </a>\n      </li>\n\n      <li>\n        \u554F\u984C\u56DE\u5831\uFF1A\n        <br>\n        <a href=\"https://github.com/Rplus/PM-nest-map/issues\">\n          https://github.com/Rplus/PM-nest-map/issues\n        </a>\n      </li>\n\n      <li>\n        \u5BF6\u53EF\u5922\u5716\u793A\u4F86\u6E90\uFF1A\n        <br>\n        <a href=\"https://archives.bulbagarden.net/w/index.php?title=Category:Shuffle_icons&fileuntil=115%0AShuffle115M.png#mw-category-media\">\n          Category:Shuffle icons - Bulbagarden Archives\n        </a>\n      </li>\n\n      <li>\n        \u5730\u5716\u5716\u8CC7\uFF1A\n        <br>\n        \xA9 OpenStreetMap & Google map\n      </li>\n    </ul>\n  </article>\n";
var infoBtn = document.createElement('div');
infoBtn.className = 'info-btn button';
infoBtn.innerHTML = "\n  <button>i</button>\n  <a href=\"#info\" title=\"\u8AAA\u660E\"></a>\n";

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function addReport(params) {
  var _map$getCenter = _map.getCenter(),
      lat = _map$getCenter.lat,
      lng = _map$getCenter.lng;

  var defaultParams = {
    dex: 0.5,
    lat: lat,
    lng: lng,
    scale: 1,
    "new": true,
    note: ''
  };
  _dialog.initReport(_objectSpread({}, defaultParams, params));
}
document.body.addEventListener('click', function (e) {
  if (e.target.className === 'fix-reoprt') {
    e.preventDefault();
    var data = e.target.dataset;
    console.log(data);
    addReport({
      lat: +data.lat,
      lng: +data.lng,
      scale: +data.scale,
      dex: +data.dex,
      "new": !!data["new"],
      note: data.note
    });
  }
});

function createAddReportBtn() {
  var dom = document.createElement('button');
  dom.id = 'add-report';
  dom.innerText = '+';
  dom.addEventListener('click', addReport);
  return dom;
}

var addReportBtn = createAddReportBtn();

var filterBoxClass = 'filters';

function createIndicator(dom) {
  return "\n    <input type=\"checkbox\" name=\"Filter\" id=\"Filter\">\n    <label for=\"Filter\">Filter</label>\n    <div class=\"".concat(filterBoxClass, "\">\n      <style>").concat(dom.style, "</style>\n      ").concat(dom.filter, "\n    </div>\n  ");
}

var scales = [1, 5, 15];
var dom = scales.reduce(function (all, scale) {
  all.input.push("\n    <input\n      type=\"checkbox\"\n      class=\"ckbox-filter\"\n      id=\"ckbox_".concat(scale, "\" checked />"));
  all.label.push("<label class=\"filter-label\" for=\"ckbox_".concat(scale, "\" data-scale=\"").concat(scale, "\"></label>"));
  all.style.push("\n    #ckbox_".concat(scale, ":not(:checked) ~ #map .poke-icon[title=\"").concat(scale, "\"] { display: none; }\n    #ckbox_").concat(scale, ":not(:checked) ~ .ctrls label[data-scale=\"").concat(scale, "\"] { filter: contrast(0%); }\n  "));
  return all;
}, {
  input: [],
  label: [],
  style: []
});
document.querySelector('#map').insertAdjacentHTML('beforebegin', dom.input.join(''));
var filterIndicator = createIndicator({
  style: dom.style.join(''),
  filter: dom.label.join('')
});

var ctrls = document.createElement('div');
ctrls.className = 'ctrls';
ctrls.appendChild(addReportBtn);
ctrls.appendChild(locateMeBtn);
ctrls.appendChild(reFetchBtn);
ctrls.appendChild(infoBtn);
ctrls.insertAdjacentHTML('beforeend', filterIndicator);

var centerMark = document.createElement('span');
centerMark.id = 'center-mark';

window.info = {
  nowlatlng: {},
  SpreadsheetId: '1N9aa3LZMaFwNbjUSGVD9NloBNE7sM0DY318-DtZHzVo',
  uid: UID()
};
document.body.appendChild(ctrls);
document.body.appendChild(_dialog);
document.body.appendChild(aside);
document.body.appendChild(centerMark);
