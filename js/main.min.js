'use strict';

function getPosition() {
  const urlParams = new URLSearchParams(location.search);

  const lat = urlParams.get('lat') || localStorage.getItem('lat') || 25.052920;
  const lng = urlParams.get('lng') || localStorage.getItem('lng') || 121.556237;
  const zoom = urlParams.get('zoom') || localStorage.getItem('zoom') || 15;

  return {
    latLng: [+lat, +lng],
    zoom: +zoom,
  };
}

function toJSON(d) {
  return d.json();
}

function fetchJSON(url) {
  return fetch(url).then(toJSON);
}

function createMarkerContent(report) {
  // let task = report.task.split('Ôºö');
  // let googleNavigation = navigation(
  //   `${report.lat},${report.lng}`,
  //   `${window.info.nowlatlng.lat},${window.info.nowlatlng.lng}`
  // );

  return `
    <div class='pokestops'>
      #${report.pokedex} ${report.name}: ~${report.size}/hr
      <a href="###"
        data-lat="${report.lat}"
        data-lng="${report.lng}"
        data-size="${report.size}"
        data-name="${report.name}"
        data-poekdex="${report.poekdex}"
      >
        fix it!
      </a>
    </div>
  `;
  // return `
  //   <div class='pokestops'>
  //     <h3>${report.site_name}</h3>
  //     <hr>
  //     <h4>${task[0]}</h4>
  //     <div>
  //       ${report['T&F'].T} ‚úîÔ∏è / ${report['T&F'].F} ‚ùå
  //     </div>
  //     <div class="crop"></div>
  //     <br>
  //     <a href="${googleNavigation}" target="_blank">google üë£</a>'
  //   </div>
  // `;
}

function setMark(report) {
  // if (
  //   isNaN(report.lat) ||
  //   isNaN(report.lng) ||
  //   !report.site_name ||
  //   !report.task ||
  //   !report['T&F']
  // ) {
  //   console.warn('gg report', { report });
  //   return;
  // }

  // report.done = doneTasks[`${report.lat},${report.lng}`];
  // let task = report.task.split('Ôºö');
  // let isDoubtful = 1 || report['T&F'].F > report['T&F'].T;

  // if (!window.info.taskIcons[task[1]]) {
  //   console.warn('no icon', report);
  //   return;
  // }

  let iconSize = map.getZoom() < 14 ? 32 : 48;
  let marker = Leaflet.marker(
    [report.lat, report.lng],
    {
      icon: L.divIcon({
        className: `poke-icon poke-icon-${report.pokedex}`,
        html: `<img class="pm-img" src="./img/z/${report.pokedex}.png">`,
        iconSize: [iconSize, iconSize], // size of the icon
        iconAnchor: [iconSize / 2, iconSize / 2], // point of the icon which will correspond to marker's location
        popupAnchor: [0, -iconSize / 3] // point from which the popup should open relative to the iconAnchor
      }),
      // icon: window.info.icons[report.pokedex],
      title: `#${report.pokedex} ${report.name}, ~${report.size}/hr`,
      report: report,
    }
  )
  .bindPopup(createMarkerContent(report), {
    autoPan: false,
  });

  // if (isDoubtful) {
  //   console.info({ Doubtful: marker });
  //   marker.isDoubtful = isDoubtful;
  // }

  // if (report.done) {
  //   marker._icon.classList.toggle('is-done', report.done);
  // }

  window.markers.set(`${report.lat},${report.lng}`, marker);
}

console.log(111);

function getData() {
  console.log('re-fetching~~~');

  if (window.markers) {
    earseMarkers(window.markers);
  }

  Promise.all([
    // u.fetchJSON(urls.GAS),
    fetchJSON('./fake.json'),
  ])
  .then(d => {
    let data = d[0].data;
    console.log(data);
    // getIcons(data);
    window.markers = new Map();
    data.forEach(setMark);
    // // updateReportTasks(d[2]);

    // let reports = d[1];
    // reports.forEach(setMark);
    renderMarkersInView();
  });
}

/* global L */


window.Leaflet = window.L;
const map = Leaflet.map('map');
window._map = map;

let position = getPosition();

map
  .on('moveend', setPosition)
  .on('moveend', renderMarkersInView)
  .on('load', onLoad)
  .on('locationfound', onLocationFound)
  .on('locationerror', onLocationError)
  .setView(position.latLng, position.zoom);


Leaflet.tileLayer('https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}',{
    maxZoom: 20,
    subdomains:['mt0','mt1','mt2','mt3']
  }).addTo(map);



function setPosition() {
  if (!map) { return; }

  let geo = map.getCenter();
  let [lat, lng] = [geo.lat, geo.lng];

  localStorage.setItem('lat', lat);
  localStorage.setItem('lng', lng);
  localStorage.setItem('zoom', map.getZoom());
}

let markersInView = [];
function renderMarkersInView() {
  let bounds = map.getBounds();

  let checkInView = (_marker, _latLng) => {
    let inView = bounds.contains(L.latLng.apply(null, _latLng.split(',')));

    if (inView) {
      markersInView.push(_marker);
      _marker.addTo(map);
      if (_marker.isDoubtful) {
        _marker._icon && _marker._icon.classList.add('is-doubtful');
      }
    }
    return inView;
  };

  if (window.markers) {
    earseMarkers(markersInView); // clear markers in view at first
    markersInView = [];
    window.markers.forEach(checkInView);
  }
}


function onLoad() {
  getData();
  setPosition();
}

function onLocationFound(e) {
  window.info.nowlatlng = e.latlng;
  const radius = e.accuracy / 2;
  if (map.circle) {
    map.removeLayer(map.circle);
  }
  map.circle = Leaflet.circle(e.latlng, radius).addTo(map);
}

function onLocationError(e) {
  console.warn(e.message);
  document.title = `[GG] - ${document.title}`;
}

function earseMarkers(markers) {
  markers.forEach(m => map.removeLayer(m));
}

function createLocateBtn() {
  let dom = document.createElement('button');
  dom.id = 'locate-me';
  dom.innerText = '‚¶ø';
  dom.addEventListener('click', locateMe);
  return dom;
}

function locateMe() {
  map.locate({
    setView: true,
    maxZoom: Math.max(map.getZoom(), 16)
  });
}

let locateMeBtn = createLocateBtn();

function createReFetchBtn() {
  let dom = document.createElement('button');
  dom.id = 're-fetch';
  dom.innerText = '‚Üª';
  dom.addEventListener('click', getData);
  return dom;
}

let reFetchBtn = createReFetchBtn();

// import addReportBtn from './btn-add-report.js';
// import filterIndicator from './filters.js';

let ctrls = document.createElement('div');
ctrls.className = 'ctrls';

// ctrls.appendChild(addReportBtn);
ctrls.appendChild(locateMeBtn);
ctrls.appendChild(reFetchBtn);

window.info = {
  nowlatlng: {},
  SpreadsheetId: '1N9aa3LZMaFwNbjUSGVD9NloBNE7sM0DY318-DtZHzVo',
};

document.body.appendChild(ctrls);
